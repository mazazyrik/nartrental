version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nartrental

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - DATABASE_URL=${DATABASE_URL}
      - MEDIA_ROOT=${MEDIA_ROOT}
      - BOT_NOTIFY_URL=${BOT_NOTIFY_URL}
      - NOTIFY_SECRET=${NOTIFY_SECRET}
    volumes:
      - media_files:/app/media
      - static_files:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      - db
    networks:
      - nartrental
    command: python manage.py runserver 0.0.0.0:8000

  bot:
    build:
      context: ../bot
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
      - "8002:8002"
    networks:
      - nartrental

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    expose:
      - "3000"
    depends_on:
      - backend
    networks:
      - nartrental
    command: npm run dev

  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
      - bot
    networks:
      - nartrental
    volumes:
      - static_files:/static:ro

volumes:
  postgres_data:
  media_files:
  static_files:

networks:
  nartrental:
    driver: bridge 